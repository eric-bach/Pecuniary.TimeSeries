# General configuration

version: 1.0.{build}

branches:
  only:
    - master

skip_tags: true

# Environment configuration

image: Visual Studio 2019

init:
  - git config --global core.autocrlf true

clone_depth: 1

environment:
  AWS_ACCESS_CLIENT_ID:
    secure: C7z6rJVutP6zFPnk812u7nrt1hYGNGWkERPCop7crDk=
  AWS_SECRET_ACCESS_KEY:
    secure: PFyH1mFKZ4J0wtnGyjeQoVcILcubg0nFDo0cIRXs6yMho+l9+V9ZWo70aWBoXhXj
  AWS_REGION: us-west-2

# Build configuration

configuration: Release

before_build:
  - dotnet --version
  - dotnet restore --verbosity m
  - nuget restore
  # Configure AWS CLI
  - aws --version
  - cmd: aws configure set aws_access_key_id %AWS_ACCESS_CLIENT_ID%
  - cmd: aws configure set aws_secret_access_key %AWS_SECRET_ACCESS_KEY%
  - cmd: aws configure set region $AWS_REGION%
  #-Install AWS SAM CLI
  - ps: Invoke-WebRequest -Uri https://github.com/awslabs/aws-sam-cli/releases/latest/download/AWS_SAM_CLI_64_PY3.msi -OutFile aws-sam-cli.msi
  - cmd: msiexec /qn /l* aws-log.txt /i aws-sam-cli.msi
  - cmd.exe /C "C:\Program Files\Amazon\AWSSAMCLI\bin\sam.cmd" --version
  
build_script:
  - cmd.exe /C "C:\Program Files\Amazon\AWSSAMCLI\bin\sam.cmd" build

after_build:
  - choco install opencover.portable
  - choco install codecov

# Tests configuration

test_script:
  - OpenCover.Console.exe
    -target:"C:\Program Files\dotnet\dotnet.exe"
    -targetargs:"test"
    -output:coverage.xml
    -oldStyle
    -filter:"+[HelloWorld*]* -[HellowWorld.Tests*]*"
    -register:user
    -returntargetcode
  - codecov -f "coverage.xml"

# Artifacts configuration

artifacts:
  - path: \src\HelloWorld\bin\Release\netcoreapp2.1\publish
    name: artifact
    type: zip

# Deployment configuration

deploy_script:
  # TODO Look at sam package and sam publish as sam deploy has a prompt
  - cmd.exe /C "C:\Program Files\Amazon\AWSSAMCLI\bin\sam.cmd" deploy
