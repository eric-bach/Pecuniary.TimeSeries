# General configuration

version: 1.0.{build}

branches:
  only:
    - master

skip_tags: true

# Environment configuration

#image: Visual Studio 2019
image: Ubuntu

init:
  - git config --global core.autocrlf true

clone_depth: 1

environment:
  AWS_ACCESS_CLIENT_ID:
    secure: 7mjagrvKpawI4d3QxIUa6fXlvxQm6C3d3DMI7S2WGlY=
  AWS_SECRET_ACCESS_KEY:
    secure: EPjzIETUdn275EWUFFOADjM3De/DpJ1gdVINaJa2by4XHeXkOTrqwHtl60FG+SF4
  AWS_REGION: us-west-2

# Build configuration

configuration: Release

before_build:
  - dotnet --version
  - dotnet restore --verbosity m
  - nuget restore
  # Install pre-reqs
  - sudo apt update
  - sudo apt install curl
  # Install AWS cli
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install
  - aws --version
  #-Install AWS SAM CLI
  #- sudo yum update -y
  #- sudo amazon-linux-extras install docker
  #- sudo service docker start
  - sudo usermod -a -G docker ec2-user
  - docker ps
  - sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
  - test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
  - test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
  - test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile
  - echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
  - brew --version
  - brew tap aws/tap
  - brew install aws-sam-cli
  - sam --version
  
build_script:
  - sam build

after_build:
  - choco install opencover.portable
  - choco install codecov

# Tests configuration

test_script:
  - OpenCover.Console.exe
    -target:"C:\Program Files\dotnet\dotnet.exe"
    -targetargs:"test"
    -output:coverage.xml
    -oldStyle
    -filter:"+[HelloWorld*]* -[HellowWorld.Tests*]*"
    -register:user
    -returntargetcode
  - codecov -f "coverage.xml"

# Artifacts configuration

artifacts:
  - path: \src\HelloWorld\bin\Release\netcoreapp2.1\publish
    name: artifact
    type: zip

# Deployment configuration

deploy_script:
  - cmd: sam deploy
